/*
 * DmsApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Pricing
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-04T10:27:16.545+02:00")
public class Pricing {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("totalCost")
  private Double totalCost = null;

  @SerializedName("pageCnt")
  private Long pageCnt = null;

  @SerializedName("documentCnt")
  private Integer documentCnt = null;

  /**
   * Gets or Sets pricingTypeRequired
   */
  @JsonAdapter(PricingTypeRequiredEnum.Adapter.class)
  public enum PricingTypeRequiredEnum {
    FREE("free"),
    
    BASIC("basic"),
    
    PREMIUM("premium"),
    
    ENTERPRISE("enterprise");

    private String value;

    PricingTypeRequiredEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PricingTypeRequiredEnum fromValue(String text) {
      for (PricingTypeRequiredEnum b : PricingTypeRequiredEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PricingTypeRequiredEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PricingTypeRequiredEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PricingTypeRequiredEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PricingTypeRequiredEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("pricingTypeRequired")
  private PricingTypeRequiredEnum pricingTypeRequired = null;

  /**
   * Gets or Sets pricingTypeOfUser
   */
  @JsonAdapter(PricingTypeOfUserEnum.Adapter.class)
  public enum PricingTypeOfUserEnum {
    FREE("free"),
    
    BASIC("basic"),
    
    PREMIUM("premium"),
    
    ENTERPRISE("enterprise");

    private String value;

    PricingTypeOfUserEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PricingTypeOfUserEnum fromValue(String text) {
      for (PricingTypeOfUserEnum b : PricingTypeOfUserEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PricingTypeOfUserEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PricingTypeOfUserEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PricingTypeOfUserEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PricingTypeOfUserEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("pricingTypeOfUser")
  private PricingTypeOfUserEnum pricingTypeOfUser = null;

  public Pricing currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Pricing totalCost(Double totalCost) {
    this.totalCost = totalCost;
    return this;
  }

   /**
   * Get totalCost
   * @return totalCost
  **/
  @ApiModelProperty(value = "")
  public Double getTotalCost() {
    return totalCost;
  }

  public void setTotalCost(Double totalCost) {
    this.totalCost = totalCost;
  }

  public Pricing pageCnt(Long pageCnt) {
    this.pageCnt = pageCnt;
    return this;
  }

   /**
   * Get pageCnt
   * @return pageCnt
  **/
  @ApiModelProperty(value = "")
  public Long getPageCnt() {
    return pageCnt;
  }

  public void setPageCnt(Long pageCnt) {
    this.pageCnt = pageCnt;
  }

  public Pricing documentCnt(Integer documentCnt) {
    this.documentCnt = documentCnt;
    return this;
  }

   /**
   * Get documentCnt
   * @return documentCnt
  **/
  @ApiModelProperty(value = "")
  public Integer getDocumentCnt() {
    return documentCnt;
  }

  public void setDocumentCnt(Integer documentCnt) {
    this.documentCnt = documentCnt;
  }

  public Pricing pricingTypeRequired(PricingTypeRequiredEnum pricingTypeRequired) {
    this.pricingTypeRequired = pricingTypeRequired;
    return this;
  }

   /**
   * Get pricingTypeRequired
   * @return pricingTypeRequired
  **/
  @ApiModelProperty(value = "")
  public PricingTypeRequiredEnum getPricingTypeRequired() {
    return pricingTypeRequired;
  }

  public void setPricingTypeRequired(PricingTypeRequiredEnum pricingTypeRequired) {
    this.pricingTypeRequired = pricingTypeRequired;
  }

  public Pricing pricingTypeOfUser(PricingTypeOfUserEnum pricingTypeOfUser) {
    this.pricingTypeOfUser = pricingTypeOfUser;
    return this;
  }

   /**
   * Get pricingTypeOfUser
   * @return pricingTypeOfUser
  **/
  @ApiModelProperty(value = "")
  public PricingTypeOfUserEnum getPricingTypeOfUser() {
    return pricingTypeOfUser;
  }

  public void setPricingTypeOfUser(PricingTypeOfUserEnum pricingTypeOfUser) {
    this.pricingTypeOfUser = pricingTypeOfUser;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pricing pricing = (Pricing) o;
    return Objects.equals(this.currency, pricing.currency) &&
        Objects.equals(this.totalCost, pricing.totalCost) &&
        Objects.equals(this.pageCnt, pricing.pageCnt) &&
        Objects.equals(this.documentCnt, pricing.documentCnt) &&
        Objects.equals(this.pricingTypeRequired, pricing.pricingTypeRequired) &&
        Objects.equals(this.pricingTypeOfUser, pricing.pricingTypeOfUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, totalCost, pageCnt, documentCnt, pricingTypeRequired, pricingTypeOfUser);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pricing {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    pageCnt: ").append(toIndentedString(pageCnt)).append("\n");
    sb.append("    documentCnt: ").append(toIndentedString(documentCnt)).append("\n");
    sb.append("    pricingTypeRequired: ").append(toIndentedString(pricingTypeRequired)).append("\n");
    sb.append("    pricingTypeOfUser: ").append(toIndentedString(pricingTypeOfUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

