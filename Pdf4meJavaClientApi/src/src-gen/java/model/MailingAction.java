/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import model.DocTemplate;
import model.MailingConfig;

/**
 * MailingAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-02T11:08:16.145Z")
public class MailingAction {
  @SerializedName("docTemplates")
  private List<DocTemplate> docTemplates = null;

  @SerializedName("mailingConfig")
  private MailingConfig mailingConfig = null;

  @SerializedName("excelData")
  private byte[] excelData = null;

  @SerializedName("startImmediate")
  private Boolean startImmediate = null;

  @SerializedName("generateSinglePDF")
  private Boolean generateSinglePDF = null;

  @SerializedName("actionId")
  private UUID actionId = null;

  public MailingAction docTemplates(List<DocTemplate> docTemplates) {
    this.docTemplates = docTemplates;
    return this;
  }

  public MailingAction addDocTemplatesItem(DocTemplate docTemplatesItem) {
    if (this.docTemplates == null) {
      this.docTemplates = new ArrayList<DocTemplate>();
    }
    this.docTemplates.add(docTemplatesItem);
    return this;
  }

  /**
   * Get docTemplates
   * 
   * @return docTemplates
   **/
  @ApiModelProperty(value = "")
  public List<DocTemplate> getDocTemplates() {
    return docTemplates;
  }

  public void setDocTemplates(List<DocTemplate> docTemplates) {
    this.docTemplates = docTemplates;
  }

  public MailingAction mailingConfig(MailingConfig mailingConfig) {
    this.mailingConfig = mailingConfig;
    return this;
  }

  /**
   * Get mailingConfig
   * 
   * @return mailingConfig
   **/
  @ApiModelProperty(value = "")
  public MailingConfig getMailingConfig() {
    return mailingConfig;
  }

  public void setMailingConfig(MailingConfig mailingConfig) {
    this.mailingConfig = mailingConfig;
  }

  public MailingAction excelData(byte[] excelData) {
    this.excelData = excelData;
    return this;
  }

  /**
   * Get excelData
   * 
   * @return excelData
   **/
  @ApiModelProperty(value = "")
  public byte[] getExcelData() {
    return excelData;
  }

  public void setExcelData(byte[] excelData) {
    this.excelData = excelData;
  }

  public MailingAction startImmediate(Boolean startImmediate) {
    this.startImmediate = startImmediate;
    return this;
  }

  /**
   * Get startImmediate
   * 
   * @return startImmediate
   **/
  @ApiModelProperty(value = "")
  public Boolean isStartImmediate() {
    return startImmediate;
  }

  public void setStartImmediate(Boolean startImmediate) {
    this.startImmediate = startImmediate;
  }

  public MailingAction generateSinglePDF(Boolean generateSinglePDF) {
    this.generateSinglePDF = generateSinglePDF;
    return this;
  }

  /**
   * Get generateSinglePDF
   * 
   * @return generateSinglePDF
   **/
  @ApiModelProperty(value = "")
  public Boolean isGenerateSinglePDF() {
    return generateSinglePDF;
  }

  public void setGenerateSinglePDF(Boolean generateSinglePDF) {
    this.generateSinglePDF = generateSinglePDF;
  }

  public MailingAction actionId(UUID actionId) {
    this.actionId = actionId;
    return this;
  }

  /**
   * Get actionId
   * 
   * @return actionId
   **/
  @ApiModelProperty(value = "")
  public UUID getActionId() {
    return actionId;
  }

  public void setActionId(UUID actionId) {
    this.actionId = actionId;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailingAction mailingAction = (MailingAction) o;
    return Objects.equals(this.docTemplates, mailingAction.docTemplates)
        && Objects.equals(this.mailingConfig, mailingAction.mailingConfig)
        && Arrays.equals(this.excelData, mailingAction.excelData)
        && Objects.equals(this.startImmediate, mailingAction.startImmediate)
        && Objects.equals(this.generateSinglePDF, mailingAction.generateSinglePDF)
        && Objects.equals(this.actionId, mailingAction.actionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docTemplates, mailingConfig, Arrays.hashCode(excelData), startImmediate, generateSinglePDF,
        actionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailingAction {\n");

    sb.append("    docTemplates: ").append(toIndentedString(docTemplates)).append("\n");
    sb.append("    mailingConfig: ").append(toIndentedString(mailingConfig)).append("\n");
    sb.append("    excelData: ").append(toIndentedString(excelData)).append("\n");
    sb.append("    startImmediate: ").append(toIndentedString(startImmediate)).append("\n");
    sb.append("    generateSinglePDF: ").append(toIndentedString(generateSinglePDF)).append("\n");
    sb.append("    actionId: ").append(toIndentedString(actionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
