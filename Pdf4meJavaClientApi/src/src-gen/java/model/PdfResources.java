/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import model.DocMetadata;
import model.Document;
import model.PdfOutline;

/**
 * PdfResources
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-02T11:08:16.145Z")
public class PdfResources {
  @SerializedName("DocMetadata")
  private DocMetadata docMetadata = null;

  @SerializedName("outlines")
  private List<PdfOutline> outlines = null;

  @SerializedName("xmpMetadata")
  private String xmpMetadata = null;

  @SerializedName("images")
  private List<Document> images = null;

  @SerializedName("text")
  private List<Document> text = null;

  public PdfResources docMetadata(DocMetadata docMetadata) {
    this.docMetadata = docMetadata;
    return this;
  }

  /**
   * Get docMetadata
   * 
   * @return docMetadata
   **/
  @ApiModelProperty(value = "")
  public DocMetadata getDocMetadata() {
    return docMetadata;
  }

  public void setDocMetadata(DocMetadata docMetadata) {
    this.docMetadata = docMetadata;
  }

  public PdfResources outlines(List<PdfOutline> outlines) {
    this.outlines = outlines;
    return this;
  }

  public PdfResources addOutlinesItem(PdfOutline outlinesItem) {
    if (this.outlines == null) {
      this.outlines = new ArrayList<PdfOutline>();
    }
    this.outlines.add(outlinesItem);
    return this;
  }

  /**
   * Get outlines
   * 
   * @return outlines
   **/
  @ApiModelProperty(value = "")
  public List<PdfOutline> getOutlines() {
    return outlines;
  }

  public void setOutlines(List<PdfOutline> outlines) {
    this.outlines = outlines;
  }

  public PdfResources xmpMetadata(String xmpMetadata) {
    this.xmpMetadata = xmpMetadata;
    return this;
  }

  /**
   * Get xmpMetadata
   * 
   * @return xmpMetadata
   **/
  @ApiModelProperty(value = "")
  public String getXmpMetadata() {
    return xmpMetadata;
  }

  public void setXmpMetadata(String xmpMetadata) {
    this.xmpMetadata = xmpMetadata;
  }

  public PdfResources images(List<Document> images) {
    this.images = images;
    return this;
  }

  public PdfResources addImagesItem(Document imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<Document>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * Get images
   * 
   * @return images
   **/
  @ApiModelProperty(value = "")
  public List<Document> getImages() {
    return images;
  }

  public void setImages(List<Document> images) {
    this.images = images;
  }

  public PdfResources text(List<Document> text) {
    this.text = text;
    return this;
  }

  public PdfResources addTextItem(Document textItem) {
    if (this.text == null) {
      this.text = new ArrayList<Document>();
    }
    this.text.add(textItem);
    return this;
  }

  /**
   * Get text
   * 
   * @return text
   **/
  @ApiModelProperty(value = "")
  public List<Document> getText() {
    return text;
  }

  public void setText(List<Document> text) {
    this.text = text;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfResources pdfResources = (PdfResources) o;
    return Objects.equals(this.docMetadata, pdfResources.docMetadata)
        && Objects.equals(this.outlines, pdfResources.outlines)
        && Objects.equals(this.xmpMetadata, pdfResources.xmpMetadata)
        && Objects.equals(this.images, pdfResources.images) && Objects.equals(this.text, pdfResources.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docMetadata, outlines, xmpMetadata, images, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfResources {\n");

    sb.append("    docMetadata: ").append(toIndentedString(docMetadata)).append("\n");
    sb.append("    outlines: ").append(toIndentedString(outlines)).append("\n");
    sb.append("    xmpMetadata: ").append(toIndentedString(xmpMetadata)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
