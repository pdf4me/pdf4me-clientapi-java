/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * SubscriptionUsage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-02T11:08:16.145Z")
public class SubscriptionUsage {
  @SerializedName("subscriptionId")
  private UUID subscriptionId = null;

  @SerializedName("apiKey")
  private UUID apiKey = null;

  @SerializedName("totalApiCost")
  private Integer totalApiCost = null;

  @SerializedName("currentApiCost")
  private Integer currentApiCost = null;

  @SerializedName("subCostTotal")
  private Integer subCostTotal = null;

  @SerializedName("subCostCurrent")
  private Integer subCostCurrent = null;

  @SerializedName("apiCallCounter")
  private Integer apiCallCounter = null;

  @SerializedName("active")
  private Boolean active = null;

  public SubscriptionUsage subscriptionId(UUID subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * Get subscriptionId
   * 
   * @return subscriptionId
   **/
  @ApiModelProperty(value = "")
  public UUID getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(UUID subscriptionId) {
    this.subscriptionId = subscriptionId;
  }

  public SubscriptionUsage apiKey(UUID apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  /**
   * Get apiKey
   * 
   * @return apiKey
   **/
  @ApiModelProperty(value = "")
  public UUID getApiKey() {
    return apiKey;
  }

  public void setApiKey(UUID apiKey) {
    this.apiKey = apiKey;
  }

  public SubscriptionUsage totalApiCost(Integer totalApiCost) {
    this.totalApiCost = totalApiCost;
    return this;
  }

  /**
   * Get totalApiCost
   * 
   * @return totalApiCost
   **/
  @ApiModelProperty(value = "")
  public Integer getTotalApiCost() {
    return totalApiCost;
  }

  public void setTotalApiCost(Integer totalApiCost) {
    this.totalApiCost = totalApiCost;
  }

  public SubscriptionUsage currentApiCost(Integer currentApiCost) {
    this.currentApiCost = currentApiCost;
    return this;
  }

  /**
   * Get currentApiCost
   * 
   * @return currentApiCost
   **/
  @ApiModelProperty(value = "")
  public Integer getCurrentApiCost() {
    return currentApiCost;
  }

  public void setCurrentApiCost(Integer currentApiCost) {
    this.currentApiCost = currentApiCost;
  }

  public SubscriptionUsage subCostTotal(Integer subCostTotal) {
    this.subCostTotal = subCostTotal;
    return this;
  }

  /**
   * Get subCostTotal
   * 
   * @return subCostTotal
   **/
  @ApiModelProperty(value = "")
  public Integer getSubCostTotal() {
    return subCostTotal;
  }

  public void setSubCostTotal(Integer subCostTotal) {
    this.subCostTotal = subCostTotal;
  }

  public SubscriptionUsage subCostCurrent(Integer subCostCurrent) {
    this.subCostCurrent = subCostCurrent;
    return this;
  }

  /**
   * Get subCostCurrent
   * 
   * @return subCostCurrent
   **/
  @ApiModelProperty(value = "")
  public Integer getSubCostCurrent() {
    return subCostCurrent;
  }

  public void setSubCostCurrent(Integer subCostCurrent) {
    this.subCostCurrent = subCostCurrent;
  }

  public SubscriptionUsage apiCallCounter(Integer apiCallCounter) {
    this.apiCallCounter = apiCallCounter;
    return this;
  }

  /**
   * Get apiCallCounter
   * 
   * @return apiCallCounter
   **/
  @ApiModelProperty(value = "")
  public Integer getApiCallCounter() {
    return apiCallCounter;
  }

  public void setApiCallCounter(Integer apiCallCounter) {
    this.apiCallCounter = apiCallCounter;
  }

  public SubscriptionUsage active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * 
   * @return active
   **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionUsage subscriptionUsage = (SubscriptionUsage) o;
    return Objects.equals(this.subscriptionId, subscriptionUsage.subscriptionId)
        && Objects.equals(this.apiKey, subscriptionUsage.apiKey)
        && Objects.equals(this.totalApiCost, subscriptionUsage.totalApiCost)
        && Objects.equals(this.currentApiCost, subscriptionUsage.currentApiCost)
        && Objects.equals(this.subCostTotal, subscriptionUsage.subCostTotal)
        && Objects.equals(this.subCostCurrent, subscriptionUsage.subCostCurrent)
        && Objects.equals(this.apiCallCounter, subscriptionUsage.apiCallCounter)
        && Objects.equals(this.active, subscriptionUsage.active);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptionId, apiKey, totalApiCost, currentApiCost, subCostTotal, subCostCurrent,
        apiCallCounter, active);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionUsage {\n");

    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    totalApiCost: ").append(toIndentedString(totalApiCost)).append("\n");
    sb.append("    currentApiCost: ").append(toIndentedString(currentApiCost)).append("\n");
    sb.append("    subCostTotal: ").append(toIndentedString(subCostTotal)).append("\n");
    sb.append("    subCostCurrent: ").append(toIndentedString(subCostCurrent)).append("\n");
    sb.append("    apiCallCounter: ").append(toIndentedString(apiCallCounter)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
