/*
 * DmsApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import model.UserFingerprint;

/**
 * GetDocumentReq
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-01T18:17:38.351+01:00")
public class GetDocumentReq {
  @SerializedName("jobId")
  private UUID jobId = null;

  @SerializedName("documentId")
  private UUID documentId = null;

  @SerializedName("thumbnailsOnly")
  private Boolean thumbnailsOnly = null;

  @SerializedName("documentType")
  private String documentType = null;

  @SerializedName("getNotified")
  private Boolean getNotified = null;

  @SerializedName("connectionId")
  private String connectionId = null;

  @SerializedName("userFingerprint")
  private UserFingerprint userFingerprint = null;

  public GetDocumentReq jobId(UUID jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(value = "")
  public UUID getJobId() {
    return jobId;
  }

  public void setJobId(UUID jobId) {
    this.jobId = jobId;
  }

  public GetDocumentReq documentId(UUID documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * Get documentId
   * @return documentId
  **/
  @ApiModelProperty(value = "")
  public UUID getDocumentId() {
    return documentId;
  }

  public void setDocumentId(UUID documentId) {
    this.documentId = documentId;
  }

  public GetDocumentReq thumbnailsOnly(Boolean thumbnailsOnly) {
    this.thumbnailsOnly = thumbnailsOnly;
    return this;
  }

   /**
   * Get thumbnailsOnly
   * @return thumbnailsOnly
  **/
  @ApiModelProperty(value = "")
  public Boolean isThumbnailsOnly() {
    return thumbnailsOnly;
  }

  public void setThumbnailsOnly(Boolean thumbnailsOnly) {
    this.thumbnailsOnly = thumbnailsOnly;
  }

  public GetDocumentReq documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @ApiModelProperty(value = "")
  public String getDocumentType() {
    return documentType;
  }

  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }

  public GetDocumentReq getNotified(Boolean getNotified) {
    this.getNotified = getNotified;
    return this;
  }

   /**
   * Run the action asynchronously, get notified for any status changes.
   * @return getNotified
  **/
  @ApiModelProperty(value = "Run the action asynchronously, get notified for any status changes.")
  public Boolean isGetNotified() {
    return getNotified;
  }

  public void setGetNotified(Boolean getNotified) {
    this.getNotified = getNotified;
  }

  public GetDocumentReq connectionId(String connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Get connectionId
   * @return connectionId
  **/
  @ApiModelProperty(value = "")
  public String getConnectionId() {
    return connectionId;
  }

  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }

  public GetDocumentReq userFingerprint(UserFingerprint userFingerprint) {
    this.userFingerprint = userFingerprint;
    return this;
  }

   /**
   * Get userFingerprint
   * @return userFingerprint
  **/
  @ApiModelProperty(value = "")
  public UserFingerprint getUserFingerprint() {
    return userFingerprint;
  }

  public void setUserFingerprint(UserFingerprint userFingerprint) {
    this.userFingerprint = userFingerprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDocumentReq getDocumentReq = (GetDocumentReq) o;
    return Objects.equals(this.jobId, getDocumentReq.jobId) &&
        Objects.equals(this.documentId, getDocumentReq.documentId) &&
        Objects.equals(this.thumbnailsOnly, getDocumentReq.thumbnailsOnly) &&
        Objects.equals(this.documentType, getDocumentReq.documentType) &&
        Objects.equals(this.getNotified, getDocumentReq.getNotified) &&
        Objects.equals(this.connectionId, getDocumentReq.connectionId) &&
        Objects.equals(this.userFingerprint, getDocumentReq.userFingerprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, documentId, thumbnailsOnly, documentType, getNotified, connectionId, userFingerprint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDocumentReq {\n");
    
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    thumbnailsOnly: ").append(toIndentedString(thumbnailsOnly)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    getNotified: ").append(toIndentedString(getNotified)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    userFingerprint: ").append(toIndentedString(userFingerprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

