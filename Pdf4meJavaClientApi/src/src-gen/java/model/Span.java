/*
 * DmsApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import model.Color;
import java.io.IOException;

/**
 * Span
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T13:33:59.770+02:00")
public class Span {
  @SerializedName("color")
  private Color color = null;

  /**
   * Gets or Sets decoration
   */
  @JsonAdapter(DecorationEnum.Adapter.class)
  public enum DecorationEnum {
    UNDERLINE("underline");

    private String value;

    DecorationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DecorationEnum fromValue(String text) {
      for (DecorationEnum b : DecorationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DecorationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DecorationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DecorationEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DecorationEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("decoration")
  private DecorationEnum decoration = null;

  public Span color(Color color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @ApiModelProperty(value = "")
  public Color getColor() {
    return color;
  }

  public void setColor(Color color) {
    this.color = color;
  }

  public Span decoration(DecorationEnum decoration) {
    this.decoration = decoration;
    return this;
  }

   /**
   * Get decoration
   * @return decoration
  **/
  @ApiModelProperty(value = "")
  public DecorationEnum getDecoration() {
    return decoration;
  }

  public void setDecoration(DecorationEnum decoration) {
    this.decoration = decoration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Span span = (Span) o;
    return Objects.equals(this.color, span.color) &&
        Objects.equals(this.decoration, span.decoration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, decoration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Span {\n");
    
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    decoration: ").append(toIndentedString(decoration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

