/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ValidateAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T12:07:57.015+01:00")
public class ValidateAction {
  /**
   * Gets or Sets pdfConformance
   */
  @JsonAdapter(PdfConformanceEnum.Adapter.class)
  public enum PdfConformanceEnum {
    PDFA1B("pdfA1b"),
    
    PDFA1A("pdfA1a"),
    
    PDFA2B("pdfA2b"),
    
    PDFA2U("pdfA2u"),
    
    PDFA2A("pdfA2a"),
    
    PDFA3B("pdfA3b"),
    
    PDFA3U("pdfA3u"),
    
    PDFA3A("pdfA3a");

    private String value;

    PdfConformanceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PdfConformanceEnum fromValue(String text) {
      for (PdfConformanceEnum b : PdfConformanceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PdfConformanceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PdfConformanceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PdfConformanceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PdfConformanceEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("pdfConformance")
  private PdfConformanceEnum pdfConformance = null;

  public ValidateAction pdfConformance(PdfConformanceEnum pdfConformance) {
    this.pdfConformance = pdfConformance;
    return this;
  }

   /**
   * Get pdfConformance
   * @return pdfConformance
  **/
  @ApiModelProperty(value = "")
  public PdfConformanceEnum getPdfConformance() {
    return pdfConformance;
  }

  public void setPdfConformance(PdfConformanceEnum pdfConformance) {
    this.pdfConformance = pdfConformance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateAction validateAction = (ValidateAction) o;
    return Objects.equals(this.pdfConformance, validateAction.pdfConformance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pdfConformance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateAction {\n");
    
    sb.append("    pdfConformance: ").append(toIndentedString(pdfConformance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

