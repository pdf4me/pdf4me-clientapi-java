/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * UsageSubscription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T12:07:57.015+01:00")
public class UsageSubscription {
  @SerializedName("id")
  private String id = null;

  @SerializedName("subscriptionId")
  private String subscriptionId = null;

  @SerializedName("subCostTotal")
  private Long subCostTotal = null;

  @SerializedName("subCostCurrent")
  private Long subCostCurrent = null;

  @SerializedName("apiCostTotal")
  private Long apiCostTotal = null;

  @SerializedName("apiCostCurrent")
  private Long apiCostCurrent = null;

  @SerializedName("feature")
  private String feature = null;

  @SerializedName("featureCallCnt")
  private Long featureCallCnt = null;

  @SerializedName("durationMsAvg")
  private Long durationMsAvg = null;

  @SerializedName("durationMsMin")
  private Long durationMsMin = null;

  @SerializedName("durationMsMax")
  private Long durationMsMax = null;

  @SerializedName("pagesAvg")
  private Long pagesAvg = null;

  @SerializedName("pagesMin")
  private Long pagesMin = null;

  @SerializedName("pagesMax")
  private Long pagesMax = null;

  @SerializedName("pagesSum")
  private Long pagesSum = null;

  @SerializedName("docSizeAvg")
  private Long docSizeAvg = null;

  @SerializedName("docSizeMin")
  private Long docSizeMin = null;

  @SerializedName("docSizeMax")
  private Long docSizeMax = null;

  @SerializedName("docSizeSum")
  private Long docSizeSum = null;

  @SerializedName("timeStampFrom")
  private OffsetDateTime timeStampFrom = null;

  @SerializedName("timeStampTo")
  private OffsetDateTime timeStampTo = null;

  public UsageSubscription id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UsageSubscription subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @ApiModelProperty(value = "")
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }

  public UsageSubscription subCostTotal(Long subCostTotal) {
    this.subCostTotal = subCostTotal;
    return this;
  }

   /**
   * Get subCostTotal
   * @return subCostTotal
  **/
  @ApiModelProperty(value = "")
  public Long getSubCostTotal() {
    return subCostTotal;
  }

  public void setSubCostTotal(Long subCostTotal) {
    this.subCostTotal = subCostTotal;
  }

  public UsageSubscription subCostCurrent(Long subCostCurrent) {
    this.subCostCurrent = subCostCurrent;
    return this;
  }

   /**
   * Get subCostCurrent
   * @return subCostCurrent
  **/
  @ApiModelProperty(value = "")
  public Long getSubCostCurrent() {
    return subCostCurrent;
  }

  public void setSubCostCurrent(Long subCostCurrent) {
    this.subCostCurrent = subCostCurrent;
  }

  public UsageSubscription apiCostTotal(Long apiCostTotal) {
    this.apiCostTotal = apiCostTotal;
    return this;
  }

   /**
   * Get apiCostTotal
   * @return apiCostTotal
  **/
  @ApiModelProperty(value = "")
  public Long getApiCostTotal() {
    return apiCostTotal;
  }

  public void setApiCostTotal(Long apiCostTotal) {
    this.apiCostTotal = apiCostTotal;
  }

  public UsageSubscription apiCostCurrent(Long apiCostCurrent) {
    this.apiCostCurrent = apiCostCurrent;
    return this;
  }

   /**
   * Get apiCostCurrent
   * @return apiCostCurrent
  **/
  @ApiModelProperty(value = "")
  public Long getApiCostCurrent() {
    return apiCostCurrent;
  }

  public void setApiCostCurrent(Long apiCostCurrent) {
    this.apiCostCurrent = apiCostCurrent;
  }

  public UsageSubscription feature(String feature) {
    this.feature = feature;
    return this;
  }

   /**
   * Get feature
   * @return feature
  **/
  @ApiModelProperty(value = "")
  public String getFeature() {
    return feature;
  }

  public void setFeature(String feature) {
    this.feature = feature;
  }

  public UsageSubscription featureCallCnt(Long featureCallCnt) {
    this.featureCallCnt = featureCallCnt;
    return this;
  }

   /**
   * Get featureCallCnt
   * @return featureCallCnt
  **/
  @ApiModelProperty(value = "")
  public Long getFeatureCallCnt() {
    return featureCallCnt;
  }

  public void setFeatureCallCnt(Long featureCallCnt) {
    this.featureCallCnt = featureCallCnt;
  }

  public UsageSubscription durationMsAvg(Long durationMsAvg) {
    this.durationMsAvg = durationMsAvg;
    return this;
  }

   /**
   * Get durationMsAvg
   * @return durationMsAvg
  **/
  @ApiModelProperty(value = "")
  public Long getDurationMsAvg() {
    return durationMsAvg;
  }

  public void setDurationMsAvg(Long durationMsAvg) {
    this.durationMsAvg = durationMsAvg;
  }

  public UsageSubscription durationMsMin(Long durationMsMin) {
    this.durationMsMin = durationMsMin;
    return this;
  }

   /**
   * Get durationMsMin
   * @return durationMsMin
  **/
  @ApiModelProperty(value = "")
  public Long getDurationMsMin() {
    return durationMsMin;
  }

  public void setDurationMsMin(Long durationMsMin) {
    this.durationMsMin = durationMsMin;
  }

  public UsageSubscription durationMsMax(Long durationMsMax) {
    this.durationMsMax = durationMsMax;
    return this;
  }

   /**
   * Get durationMsMax
   * @return durationMsMax
  **/
  @ApiModelProperty(value = "")
  public Long getDurationMsMax() {
    return durationMsMax;
  }

  public void setDurationMsMax(Long durationMsMax) {
    this.durationMsMax = durationMsMax;
  }

  public UsageSubscription pagesAvg(Long pagesAvg) {
    this.pagesAvg = pagesAvg;
    return this;
  }

   /**
   * Get pagesAvg
   * @return pagesAvg
  **/
  @ApiModelProperty(value = "")
  public Long getPagesAvg() {
    return pagesAvg;
  }

  public void setPagesAvg(Long pagesAvg) {
    this.pagesAvg = pagesAvg;
  }

  public UsageSubscription pagesMin(Long pagesMin) {
    this.pagesMin = pagesMin;
    return this;
  }

   /**
   * Get pagesMin
   * @return pagesMin
  **/
  @ApiModelProperty(value = "")
  public Long getPagesMin() {
    return pagesMin;
  }

  public void setPagesMin(Long pagesMin) {
    this.pagesMin = pagesMin;
  }

  public UsageSubscription pagesMax(Long pagesMax) {
    this.pagesMax = pagesMax;
    return this;
  }

   /**
   * Get pagesMax
   * @return pagesMax
  **/
  @ApiModelProperty(value = "")
  public Long getPagesMax() {
    return pagesMax;
  }

  public void setPagesMax(Long pagesMax) {
    this.pagesMax = pagesMax;
  }

  public UsageSubscription pagesSum(Long pagesSum) {
    this.pagesSum = pagesSum;
    return this;
  }

   /**
   * Get pagesSum
   * @return pagesSum
  **/
  @ApiModelProperty(value = "")
  public Long getPagesSum() {
    return pagesSum;
  }

  public void setPagesSum(Long pagesSum) {
    this.pagesSum = pagesSum;
  }

  public UsageSubscription docSizeAvg(Long docSizeAvg) {
    this.docSizeAvg = docSizeAvg;
    return this;
  }

   /**
   * Get docSizeAvg
   * @return docSizeAvg
  **/
  @ApiModelProperty(value = "")
  public Long getDocSizeAvg() {
    return docSizeAvg;
  }

  public void setDocSizeAvg(Long docSizeAvg) {
    this.docSizeAvg = docSizeAvg;
  }

  public UsageSubscription docSizeMin(Long docSizeMin) {
    this.docSizeMin = docSizeMin;
    return this;
  }

   /**
   * Get docSizeMin
   * @return docSizeMin
  **/
  @ApiModelProperty(value = "")
  public Long getDocSizeMin() {
    return docSizeMin;
  }

  public void setDocSizeMin(Long docSizeMin) {
    this.docSizeMin = docSizeMin;
  }

  public UsageSubscription docSizeMax(Long docSizeMax) {
    this.docSizeMax = docSizeMax;
    return this;
  }

   /**
   * Get docSizeMax
   * @return docSizeMax
  **/
  @ApiModelProperty(value = "")
  public Long getDocSizeMax() {
    return docSizeMax;
  }

  public void setDocSizeMax(Long docSizeMax) {
    this.docSizeMax = docSizeMax;
  }

  public UsageSubscription docSizeSum(Long docSizeSum) {
    this.docSizeSum = docSizeSum;
    return this;
  }

   /**
   * Get docSizeSum
   * @return docSizeSum
  **/
  @ApiModelProperty(value = "")
  public Long getDocSizeSum() {
    return docSizeSum;
  }

  public void setDocSizeSum(Long docSizeSum) {
    this.docSizeSum = docSizeSum;
  }

  public UsageSubscription timeStampFrom(OffsetDateTime timeStampFrom) {
    this.timeStampFrom = timeStampFrom;
    return this;
  }

   /**
   * Get timeStampFrom
   * @return timeStampFrom
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTimeStampFrom() {
    return timeStampFrom;
  }

  public void setTimeStampFrom(OffsetDateTime timeStampFrom) {
    this.timeStampFrom = timeStampFrom;
  }

  public UsageSubscription timeStampTo(OffsetDateTime timeStampTo) {
    this.timeStampTo = timeStampTo;
    return this;
  }

   /**
   * Get timeStampTo
   * @return timeStampTo
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getTimeStampTo() {
    return timeStampTo;
  }

  public void setTimeStampTo(OffsetDateTime timeStampTo) {
    this.timeStampTo = timeStampTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageSubscription usageSubscription = (UsageSubscription) o;
    return Objects.equals(this.id, usageSubscription.id) &&
        Objects.equals(this.subscriptionId, usageSubscription.subscriptionId) &&
        Objects.equals(this.subCostTotal, usageSubscription.subCostTotal) &&
        Objects.equals(this.subCostCurrent, usageSubscription.subCostCurrent) &&
        Objects.equals(this.apiCostTotal, usageSubscription.apiCostTotal) &&
        Objects.equals(this.apiCostCurrent, usageSubscription.apiCostCurrent) &&
        Objects.equals(this.feature, usageSubscription.feature) &&
        Objects.equals(this.featureCallCnt, usageSubscription.featureCallCnt) &&
        Objects.equals(this.durationMsAvg, usageSubscription.durationMsAvg) &&
        Objects.equals(this.durationMsMin, usageSubscription.durationMsMin) &&
        Objects.equals(this.durationMsMax, usageSubscription.durationMsMax) &&
        Objects.equals(this.pagesAvg, usageSubscription.pagesAvg) &&
        Objects.equals(this.pagesMin, usageSubscription.pagesMin) &&
        Objects.equals(this.pagesMax, usageSubscription.pagesMax) &&
        Objects.equals(this.pagesSum, usageSubscription.pagesSum) &&
        Objects.equals(this.docSizeAvg, usageSubscription.docSizeAvg) &&
        Objects.equals(this.docSizeMin, usageSubscription.docSizeMin) &&
        Objects.equals(this.docSizeMax, usageSubscription.docSizeMax) &&
        Objects.equals(this.docSizeSum, usageSubscription.docSizeSum) &&
        Objects.equals(this.timeStampFrom, usageSubscription.timeStampFrom) &&
        Objects.equals(this.timeStampTo, usageSubscription.timeStampTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, subscriptionId, subCostTotal, subCostCurrent, apiCostTotal, apiCostCurrent, feature, featureCallCnt, durationMsAvg, durationMsMin, durationMsMax, pagesAvg, pagesMin, pagesMax, pagesSum, docSizeAvg, docSizeMin, docSizeMax, docSizeSum, timeStampFrom, timeStampTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageSubscription {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    subCostTotal: ").append(toIndentedString(subCostTotal)).append("\n");
    sb.append("    subCostCurrent: ").append(toIndentedString(subCostCurrent)).append("\n");
    sb.append("    apiCostTotal: ").append(toIndentedString(apiCostTotal)).append("\n");
    sb.append("    apiCostCurrent: ").append(toIndentedString(apiCostCurrent)).append("\n");
    sb.append("    feature: ").append(toIndentedString(feature)).append("\n");
    sb.append("    featureCallCnt: ").append(toIndentedString(featureCallCnt)).append("\n");
    sb.append("    durationMsAvg: ").append(toIndentedString(durationMsAvg)).append("\n");
    sb.append("    durationMsMin: ").append(toIndentedString(durationMsMin)).append("\n");
    sb.append("    durationMsMax: ").append(toIndentedString(durationMsMax)).append("\n");
    sb.append("    pagesAvg: ").append(toIndentedString(pagesAvg)).append("\n");
    sb.append("    pagesMin: ").append(toIndentedString(pagesMin)).append("\n");
    sb.append("    pagesMax: ").append(toIndentedString(pagesMax)).append("\n");
    sb.append("    pagesSum: ").append(toIndentedString(pagesSum)).append("\n");
    sb.append("    docSizeAvg: ").append(toIndentedString(docSizeAvg)).append("\n");
    sb.append("    docSizeMin: ").append(toIndentedString(docSizeMin)).append("\n");
    sb.append("    docSizeMax: ").append(toIndentedString(docSizeMax)).append("\n");
    sb.append("    docSizeSum: ").append(toIndentedString(docSizeSum)).append("\n");
    sb.append("    timeStampFrom: ").append(toIndentedString(timeStampFrom)).append("\n");
    sb.append("    timeStampTo: ").append(toIndentedString(timeStampTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

