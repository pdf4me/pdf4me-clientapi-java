/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * DocMetadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-25T12:07:57.015+01:00")
public class DocMetadata {
  @SerializedName("title")
  private String title = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("pageCount")
  private Long pageCount = null;

  @SerializedName("author")
  private String author = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("producer")
  private String producer = null;

  @SerializedName("creationDate")
  private OffsetDateTime creationDate = null;

  @SerializedName("modDate")
  private OffsetDateTime modDate = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("isEncrypted")
  private Boolean isEncrypted = null;

  @SerializedName("isLinearized")
  private Boolean isLinearized = null;

  @SerializedName("pdfCompliance")
  private String pdfCompliance = null;

  @SerializedName("isSigned")
  private Boolean isSigned = null;

  @SerializedName("documentId")
  private UUID documentId = null;

  public DocMetadata title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DocMetadata subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public DocMetadata pageCount(Long pageCount) {
    this.pageCount = pageCount;
    return this;
  }

   /**
   * Get pageCount
   * @return pageCount
  **/
  @ApiModelProperty(value = "")
  public Long getPageCount() {
    return pageCount;
  }

  public void setPageCount(Long pageCount) {
    this.pageCount = pageCount;
  }

  public DocMetadata author(String author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @ApiModelProperty(value = "")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public DocMetadata creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @ApiModelProperty(value = "")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public DocMetadata producer(String producer) {
    this.producer = producer;
    return this;
  }

   /**
   * Get producer
   * @return producer
  **/
  @ApiModelProperty(value = "")
  public String getProducer() {
    return producer;
  }

  public void setProducer(String producer) {
    this.producer = producer;
  }

  public DocMetadata creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public DocMetadata modDate(OffsetDateTime modDate) {
    this.modDate = modDate;
    return this;
  }

   /**
   * Get modDate
   * @return modDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModDate() {
    return modDate;
  }

  public void setModDate(OffsetDateTime modDate) {
    this.modDate = modDate;
  }

  public DocMetadata size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(value = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public DocMetadata isEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
    return this;
  }

   /**
   * Get isEncrypted
   * @return isEncrypted
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsEncrypted() {
    return isEncrypted;
  }

  public void setIsEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
  }

  public DocMetadata isLinearized(Boolean isLinearized) {
    this.isLinearized = isLinearized;
    return this;
  }

   /**
   * Get isLinearized
   * @return isLinearized
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsLinearized() {
    return isLinearized;
  }

  public void setIsLinearized(Boolean isLinearized) {
    this.isLinearized = isLinearized;
  }

  public DocMetadata pdfCompliance(String pdfCompliance) {
    this.pdfCompliance = pdfCompliance;
    return this;
  }

   /**
   * Get pdfCompliance
   * @return pdfCompliance
  **/
  @ApiModelProperty(value = "")
  public String getPdfCompliance() {
    return pdfCompliance;
  }

  public void setPdfCompliance(String pdfCompliance) {
    this.pdfCompliance = pdfCompliance;
  }

  public DocMetadata isSigned(Boolean isSigned) {
    this.isSigned = isSigned;
    return this;
  }

   /**
   * Get isSigned
   * @return isSigned
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSigned() {
    return isSigned;
  }

  public void setIsSigned(Boolean isSigned) {
    this.isSigned = isSigned;
  }

  public DocMetadata documentId(UUID documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * Get documentId
   * @return documentId
  **/
  @ApiModelProperty(value = "")
  public UUID getDocumentId() {
    return documentId;
  }

  public void setDocumentId(UUID documentId) {
    this.documentId = documentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocMetadata docMetadata = (DocMetadata) o;
    return Objects.equals(this.title, docMetadata.title) &&
        Objects.equals(this.subject, docMetadata.subject) &&
        Objects.equals(this.pageCount, docMetadata.pageCount) &&
        Objects.equals(this.author, docMetadata.author) &&
        Objects.equals(this.creator, docMetadata.creator) &&
        Objects.equals(this.producer, docMetadata.producer) &&
        Objects.equals(this.creationDate, docMetadata.creationDate) &&
        Objects.equals(this.modDate, docMetadata.modDate) &&
        Objects.equals(this.size, docMetadata.size) &&
        Objects.equals(this.isEncrypted, docMetadata.isEncrypted) &&
        Objects.equals(this.isLinearized, docMetadata.isLinearized) &&
        Objects.equals(this.pdfCompliance, docMetadata.pdfCompliance) &&
        Objects.equals(this.isSigned, docMetadata.isSigned) &&
        Objects.equals(this.documentId, docMetadata.documentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, subject, pageCount, author, creator, producer, creationDate, modDate, size, isEncrypted, isLinearized, pdfCompliance, isSigned, documentId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocMetadata {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    producer: ").append(toIndentedString(producer)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modDate: ").append(toIndentedString(modDate)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    isEncrypted: ").append(toIndentedString(isEncrypted)).append("\n");
    sb.append("    isLinearized: ").append(toIndentedString(isLinearized)).append("\n");
    sb.append("    pdfCompliance: ").append(toIndentedString(pdfCompliance)).append("\n");
    sb.append("    isSigned: ").append(toIndentedString(isSigned)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

