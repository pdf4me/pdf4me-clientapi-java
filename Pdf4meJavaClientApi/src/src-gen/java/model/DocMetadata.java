/*
 * DmsApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DocMetadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-19T13:33:59.770+02:00")
public class DocMetadata {
  @SerializedName("title")
  private String title = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("pageCount")
  private Long pageCount = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("isEncrypted")
  private Boolean isEncrypted = null;

  @SerializedName("pdfCompliance")
  private String pdfCompliance = null;

  @SerializedName("isSigned")
  private Boolean isSigned = null;

  @SerializedName("uploadedMimeType")
  private String uploadedMimeType = null;

  @SerializedName("uploadedFileSize")
  private Long uploadedFileSize = null;

  public DocMetadata title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DocMetadata subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public DocMetadata pageCount(Long pageCount) {
    this.pageCount = pageCount;
    return this;
  }

   /**
   * Get pageCount
   * @return pageCount
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getPageCount() {
    return pageCount;
  }

  public void setPageCount(Long pageCount) {
    this.pageCount = pageCount;
  }

  public DocMetadata size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public DocMetadata isEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
    return this;
  }

   /**
   * Get isEncrypted
   * @return isEncrypted
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsEncrypted() {
    return isEncrypted;
  }

  public void setIsEncrypted(Boolean isEncrypted) {
    this.isEncrypted = isEncrypted;
  }

  public DocMetadata pdfCompliance(String pdfCompliance) {
    this.pdfCompliance = pdfCompliance;
    return this;
  }

   /**
   * Get pdfCompliance
   * @return pdfCompliance
  **/
  @ApiModelProperty(value = "")
  public String getPdfCompliance() {
    return pdfCompliance;
  }

  public void setPdfCompliance(String pdfCompliance) {
    this.pdfCompliance = pdfCompliance;
  }

  public DocMetadata isSigned(Boolean isSigned) {
    this.isSigned = isSigned;
    return this;
  }

   /**
   * Get isSigned
   * @return isSigned
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsSigned() {
    return isSigned;
  }

  public void setIsSigned(Boolean isSigned) {
    this.isSigned = isSigned;
  }

  public DocMetadata uploadedMimeType(String uploadedMimeType) {
    this.uploadedMimeType = uploadedMimeType;
    return this;
  }

   /**
   * Get uploadedMimeType
   * @return uploadedMimeType
  **/
  @ApiModelProperty(value = "")
  public String getUploadedMimeType() {
    return uploadedMimeType;
  }

  public void setUploadedMimeType(String uploadedMimeType) {
    this.uploadedMimeType = uploadedMimeType;
  }

  public DocMetadata uploadedFileSize(Long uploadedFileSize) {
    this.uploadedFileSize = uploadedFileSize;
    return this;
  }

   /**
   * Get uploadedFileSize
   * @return uploadedFileSize
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getUploadedFileSize() {
    return uploadedFileSize;
  }

  public void setUploadedFileSize(Long uploadedFileSize) {
    this.uploadedFileSize = uploadedFileSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocMetadata docMetadata = (DocMetadata) o;
    return Objects.equals(this.title, docMetadata.title) &&
        Objects.equals(this.subject, docMetadata.subject) &&
        Objects.equals(this.pageCount, docMetadata.pageCount) &&
        Objects.equals(this.size, docMetadata.size) &&
        Objects.equals(this.isEncrypted, docMetadata.isEncrypted) &&
        Objects.equals(this.pdfCompliance, docMetadata.pdfCompliance) &&
        Objects.equals(this.isSigned, docMetadata.isSigned) &&
        Objects.equals(this.uploadedMimeType, docMetadata.uploadedMimeType) &&
        Objects.equals(this.uploadedFileSize, docMetadata.uploadedFileSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, subject, pageCount, size, isEncrypted, pdfCompliance, isSigned, uploadedMimeType, uploadedFileSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocMetadata {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    isEncrypted: ").append(toIndentedString(isEncrypted)).append("\n");
    sb.append("    pdfCompliance: ").append(toIndentedString(pdfCompliance)).append("\n");
    sb.append("    isSigned: ").append(toIndentedString(isSigned)).append("\n");
    sb.append("    uploadedMimeType: ").append(toIndentedString(uploadedMimeType)).append("\n");
    sb.append("    uploadedFileSize: ").append(toIndentedString(uploadedFileSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

