/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DocTemplate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-02T11:08:16.145Z")
public class DocTemplate {
  @SerializedName("name")
  private String name = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("sortOrder")
  private Integer sortOrder = null;

  @SerializedName("processType")
  private String processType = null;

  @SerializedName("docType")
  private String docType = null;

  @SerializedName("docTemplateSetId")
  private String docTemplateSetId = null;

  /**
   * Gets or Sets docRenderType
   */
  @JsonAdapter(DocRenderTypeEnum.Adapter.class)
  public enum DocRenderTypeEnum {
    UNDEF("undef"),

    WORDMAILMERGE("wordMailMerge"),

    PDFSTATIC("pdfStatic"),

    PDFFORM("pdfForm"),

    EXCEL("excel"),

    REPORT("report");

    private String value;

    DocRenderTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DocRenderTypeEnum fromValue(String text) {
      for (DocRenderTypeEnum b : DocRenderTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DocRenderTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DocRenderTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DocRenderTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DocRenderTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("docRenderType")
  private DocRenderTypeEnum docRenderType = null;

  @SerializedName("docTemplateContent")
  private byte[] docTemplateContent = null;

  public DocTemplate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * 
   * @return name
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DocTemplate language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * 
   * @return language
   **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public DocTemplate sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Get sortOrder
   * 
   * @return sortOrder
   **/
  @ApiModelProperty(value = "")
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  public DocTemplate processType(String processType) {
    this.processType = processType;
    return this;
  }

  /**
   * Get processType
   * 
   * @return processType
   **/
  @ApiModelProperty(value = "")
  public String getProcessType() {
    return processType;
  }

  public void setProcessType(String processType) {
    this.processType = processType;
  }

  public DocTemplate docType(String docType) {
    this.docType = docType;
    return this;
  }

  /**
   * Get docType
   * 
   * @return docType
   **/
  @ApiModelProperty(value = "")
  public String getDocType() {
    return docType;
  }

  public void setDocType(String docType) {
    this.docType = docType;
  }

  public DocTemplate docTemplateSetId(String docTemplateSetId) {
    this.docTemplateSetId = docTemplateSetId;
    return this;
  }

  /**
   * Get docTemplateSetId
   * 
   * @return docTemplateSetId
   **/
  @ApiModelProperty(value = "")
  public String getDocTemplateSetId() {
    return docTemplateSetId;
  }

  public void setDocTemplateSetId(String docTemplateSetId) {
    this.docTemplateSetId = docTemplateSetId;
  }

  public DocTemplate docRenderType(DocRenderTypeEnum docRenderType) {
    this.docRenderType = docRenderType;
    return this;
  }

  /**
   * Get docRenderType
   * 
   * @return docRenderType
   **/
  @ApiModelProperty(value = "")
  public DocRenderTypeEnum getDocRenderType() {
    return docRenderType;
  }

  public void setDocRenderType(DocRenderTypeEnum docRenderType) {
    this.docRenderType = docRenderType;
  }

  public DocTemplate docTemplateContent(byte[] docTemplateContent) {
    this.docTemplateContent = docTemplateContent;
    return this;
  }

  /**
   * Get docTemplateContent
   * 
   * @return docTemplateContent
   **/
  @ApiModelProperty(value = "")
  public byte[] getDocTemplateContent() {
    return docTemplateContent;
  }

  public void setDocTemplateContent(byte[] docTemplateContent) {
    this.docTemplateContent = docTemplateContent;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocTemplate docTemplate = (DocTemplate) o;
    return Objects.equals(this.name, docTemplate.name) && Objects.equals(this.language, docTemplate.language)
        && Objects.equals(this.sortOrder, docTemplate.sortOrder)
        && Objects.equals(this.processType, docTemplate.processType)
        && Objects.equals(this.docType, docTemplate.docType)
        && Objects.equals(this.docTemplateSetId, docTemplate.docTemplateSetId)
        && Objects.equals(this.docRenderType, docTemplate.docRenderType)
        && Arrays.equals(this.docTemplateContent, docTemplate.docTemplateContent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, language, sortOrder, processType, docType, docTemplateSetId, docRenderType,
        Arrays.hashCode(docTemplateContent));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocTemplate {\n");

    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    processType: ").append(toIndentedString(processType)).append("\n");
    sb.append("    docType: ").append(toIndentedString(docType)).append("\n");
    sb.append("    docTemplateSetId: ").append(toIndentedString(docTemplateSetId)).append("\n");
    sb.append("    docRenderType: ").append(toIndentedString(docRenderType)).append("\n");
    sb.append("    docTemplateContent: ").append(toIndentedString(docTemplateContent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
