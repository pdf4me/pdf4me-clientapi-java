/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import model.ExecutionTrigger;
import model.StorageFolder;

/**
 * JobFlowPlan
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-02T11:08:16.145Z")
public class JobFlowPlan {
  @SerializedName("jobFlowPlanId")
  private UUID jobFlowPlanId = null;

  @SerializedName("jobFlowId")
  private UUID jobFlowId = null;

  @SerializedName("applicationId")
  private UUID applicationId = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("userId")
  private UUID userId = null;

  @SerializedName("tenantId")
  private UUID tenantId = null;

  @SerializedName("sourceFolder")
  private StorageFolder sourceFolder = null;

  @SerializedName("executionTrigger")
  private ExecutionTrigger executionTrigger = null;

  @SerializedName("targetFolder")
  private StorageFolder targetFolder = null;

  @SerializedName("machineId")
  private String machineId = null;

  public JobFlowPlan jobFlowPlanId(UUID jobFlowPlanId) {
    this.jobFlowPlanId = jobFlowPlanId;
    return this;
  }

  /**
   * Get jobFlowPlanId
   * 
   * @return jobFlowPlanId
   **/
  @ApiModelProperty(value = "")
  public UUID getJobFlowPlanId() {
    return jobFlowPlanId;
  }

  public void setJobFlowPlanId(UUID jobFlowPlanId) {
    this.jobFlowPlanId = jobFlowPlanId;
  }

  public JobFlowPlan jobFlowId(UUID jobFlowId) {
    this.jobFlowId = jobFlowId;
    return this;
  }

  /**
   * Get jobFlowId
   * 
   * @return jobFlowId
   **/
  @ApiModelProperty(value = "")
  public UUID getJobFlowId() {
    return jobFlowId;
  }

  public void setJobFlowId(UUID jobFlowId) {
    this.jobFlowId = jobFlowId;
  }

  public JobFlowPlan applicationId(UUID applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Get applicationId
   * 
   * @return applicationId
   **/
  @ApiModelProperty(value = "")
  public UUID getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(UUID applicationId) {
    this.applicationId = applicationId;
  }

  public JobFlowPlan enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * 
   * @return enabled
   **/
  @ApiModelProperty(value = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public JobFlowPlan active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * 
   * @return active
   **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public JobFlowPlan userId(UUID userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * 
   * @return userId
   **/
  @ApiModelProperty(value = "")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public JobFlowPlan tenantId(UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * 
   * @return tenantId
   **/
  @ApiModelProperty(value = "")
  public UUID getTenantId() {
    return tenantId;
  }

  public void setTenantId(UUID tenantId) {
    this.tenantId = tenantId;
  }

  public JobFlowPlan sourceFolder(StorageFolder sourceFolder) {
    this.sourceFolder = sourceFolder;
    return this;
  }

  /**
   * Get sourceFolder
   * 
   * @return sourceFolder
   **/
  @ApiModelProperty(value = "")
  public StorageFolder getSourceFolder() {
    return sourceFolder;
  }

  public void setSourceFolder(StorageFolder sourceFolder) {
    this.sourceFolder = sourceFolder;
  }

  public JobFlowPlan executionTrigger(ExecutionTrigger executionTrigger) {
    this.executionTrigger = executionTrigger;
    return this;
  }

  /**
   * Get executionTrigger
   * 
   * @return executionTrigger
   **/
  @ApiModelProperty(value = "")
  public ExecutionTrigger getExecutionTrigger() {
    return executionTrigger;
  }

  public void setExecutionTrigger(ExecutionTrigger executionTrigger) {
    this.executionTrigger = executionTrigger;
  }

  public JobFlowPlan targetFolder(StorageFolder targetFolder) {
    this.targetFolder = targetFolder;
    return this;
  }

  /**
   * Get targetFolder
   * 
   * @return targetFolder
   **/
  @ApiModelProperty(value = "")
  public StorageFolder getTargetFolder() {
    return targetFolder;
  }

  public void setTargetFolder(StorageFolder targetFolder) {
    this.targetFolder = targetFolder;
  }

  public JobFlowPlan machineId(String machineId) {
    this.machineId = machineId;
    return this;
  }

  /**
   * Get machineId
   * 
   * @return machineId
   **/
  @ApiModelProperty(value = "")
  public String getMachineId() {
    return machineId;
  }

  public void setMachineId(String machineId) {
    this.machineId = machineId;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobFlowPlan jobFlowPlan = (JobFlowPlan) o;
    return Objects.equals(this.jobFlowPlanId, jobFlowPlan.jobFlowPlanId)
        && Objects.equals(this.jobFlowId, jobFlowPlan.jobFlowId)
        && Objects.equals(this.applicationId, jobFlowPlan.applicationId)
        && Objects.equals(this.enabled, jobFlowPlan.enabled) && Objects.equals(this.active, jobFlowPlan.active)
        && Objects.equals(this.userId, jobFlowPlan.userId) && Objects.equals(this.tenantId, jobFlowPlan.tenantId)
        && Objects.equals(this.sourceFolder, jobFlowPlan.sourceFolder)
        && Objects.equals(this.executionTrigger, jobFlowPlan.executionTrigger)
        && Objects.equals(this.targetFolder, jobFlowPlan.targetFolder)
        && Objects.equals(this.machineId, jobFlowPlan.machineId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobFlowPlanId, jobFlowId, applicationId, enabled, active, userId, tenantId, sourceFolder,
        executionTrigger, targetFolder, machineId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobFlowPlan {\n");

    sb.append("    jobFlowPlanId: ").append(toIndentedString(jobFlowPlanId)).append("\n");
    sb.append("    jobFlowId: ").append(toIndentedString(jobFlowId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    sourceFolder: ").append(toIndentedString(sourceFolder)).append("\n");
    sb.append("    executionTrigger: ").append(toIndentedString(executionTrigger)).append("\n");
    sb.append("    targetFolder: ").append(toIndentedString(targetFolder)).append("\n");
    sb.append("    machineId: ").append(toIndentedString(machineId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
