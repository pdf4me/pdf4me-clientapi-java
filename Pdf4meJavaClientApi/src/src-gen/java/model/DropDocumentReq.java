/*
 * Pdf4me
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import model.IntegrationSetting;
import model.Notification;
import model.Pdf4meDocument;

/**
 * DropDocumentReq
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-02T11:08:16.145Z")
public class DropDocumentReq {
  @SerializedName("notification")
  private Notification notification = null;

  @SerializedName("documentId")
  private UUID documentId = null;

  @SerializedName("userId")
  private UUID userId = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("document")
  private byte[] document = null;

  @SerializedName("fileName")
  private String fileName = null;

  /**
   * Gets or Sets cloudStorageProvider
   */
  @JsonAdapter(CloudStorageProviderEnum.Adapter.class)
  public enum CloudStorageProviderEnum {
    UNDEF("undef"),

    LOCAL("local"),

    URL("url"),

    ONEDRIVE("oneDrive"),

    DROPBOX("dropbox"),

    GOOGLEDRIVE("googleDrive"),

    KLOUDLESS("kloudless");

    private String value;

    CloudStorageProviderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CloudStorageProviderEnum fromValue(String text) {
      for (CloudStorageProviderEnum b : CloudStorageProviderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CloudStorageProviderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CloudStorageProviderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CloudStorageProviderEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CloudStorageProviderEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cloudStorageProvider")
  private CloudStorageProviderEnum cloudStorageProvider = null;

  @SerializedName("cloudStorageFiles")
  private List<String> cloudStorageFiles = null;

  @SerializedName("cloudStorageFilesDesc")
  private String cloudStorageFilesDesc = null;

  @SerializedName("tenantId")
  private UUID tenantId = null;

  @SerializedName("subscriptionId")
  private UUID subscriptionId = null;

  @SerializedName("traceId")
  private UUID traceId = null;

  @SerializedName("requestId")
  private String requestId = null;

  @SerializedName("integrationSetting")
  private IntegrationSetting integrationSetting = null;

  @SerializedName("jobId")
  private UUID jobId = null;

  @SerializedName("jobIdExt")
  private String jobIdExt = null;

  @SerializedName("documents")
  private List<Pdf4meDocument> documents = null;

  @SerializedName("withoutMetadata")
  private Boolean withoutMetadata = null;

  public DropDocumentReq notification(Notification notification) {
    this.notification = notification;
    return this;
  }

  /**
   * Get notification
   * 
   * @return notification
   **/
  @ApiModelProperty(value = "")
  public Notification getNotification() {
    return notification;
  }

  public void setNotification(Notification notification) {
    this.notification = notification;
  }

  public DropDocumentReq documentId(UUID documentId) {
    this.documentId = documentId;
    return this;
  }

  /**
   * Get documentId
   * 
   * @return documentId
   **/
  @ApiModelProperty(value = "")
  public UUID getDocumentId() {
    return documentId;
  }

  public void setDocumentId(UUID documentId) {
    this.documentId = documentId;
  }

  public DropDocumentReq userId(UUID userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * 
   * @return userId
   **/
  @ApiModelProperty(value = "")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public DropDocumentReq url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * 
   * @return url
   **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public DropDocumentReq document(byte[] document) {
    this.document = document;
    return this;
  }

  /**
   * Get document
   * 
   * @return document
   **/
  @ApiModelProperty(value = "")
  public byte[] getDocument() {
    return document;
  }

  public void setDocument(byte[] document) {
    this.document = document;
  }

  public DropDocumentReq fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * Get fileName
   * 
   * @return fileName
   **/
  @ApiModelProperty(value = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public DropDocumentReq cloudStorageProvider(CloudStorageProviderEnum cloudStorageProvider) {
    this.cloudStorageProvider = cloudStorageProvider;
    return this;
  }

  /**
   * Get cloudStorageProvider
   * 
   * @return cloudStorageProvider
   **/
  @ApiModelProperty(value = "")
  public CloudStorageProviderEnum getCloudStorageProvider() {
    return cloudStorageProvider;
  }

  public void setCloudStorageProvider(CloudStorageProviderEnum cloudStorageProvider) {
    this.cloudStorageProvider = cloudStorageProvider;
  }

  public DropDocumentReq cloudStorageFiles(List<String> cloudStorageFiles) {
    this.cloudStorageFiles = cloudStorageFiles;
    return this;
  }

  public DropDocumentReq addCloudStorageFilesItem(String cloudStorageFilesItem) {
    if (this.cloudStorageFiles == null) {
      this.cloudStorageFiles = new ArrayList<String>();
    }
    this.cloudStorageFiles.add(cloudStorageFilesItem);
    return this;
  }

  /**
   * Get cloudStorageFiles
   * 
   * @return cloudStorageFiles
   **/
  @ApiModelProperty(value = "")
  public List<String> getCloudStorageFiles() {
    return cloudStorageFiles;
  }

  public void setCloudStorageFiles(List<String> cloudStorageFiles) {
    this.cloudStorageFiles = cloudStorageFiles;
  }

  public DropDocumentReq cloudStorageFilesDesc(String cloudStorageFilesDesc) {
    this.cloudStorageFilesDesc = cloudStorageFilesDesc;
    return this;
  }

  /**
   * Get cloudStorageFilesDesc
   * 
   * @return cloudStorageFilesDesc
   **/
  @ApiModelProperty(value = "")
  public String getCloudStorageFilesDesc() {
    return cloudStorageFilesDesc;
  }

  public void setCloudStorageFilesDesc(String cloudStorageFilesDesc) {
    this.cloudStorageFilesDesc = cloudStorageFilesDesc;
  }

  public DropDocumentReq tenantId(UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * Get tenantId
   * 
   * @return tenantId
   **/
  @ApiModelProperty(value = "")
  public UUID getTenantId() {
    return tenantId;
  }

  public void setTenantId(UUID tenantId) {
    this.tenantId = tenantId;
  }

  public DropDocumentReq subscriptionId(UUID subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * Get subscriptionId
   * 
   * @return subscriptionId
   **/
  @ApiModelProperty(value = "")
  public UUID getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(UUID subscriptionId) {
    this.subscriptionId = subscriptionId;
  }

  public DropDocumentReq traceId(UUID traceId) {
    this.traceId = traceId;
    return this;
  }

  /**
   * Get traceId
   * 
   * @return traceId
   **/
  @ApiModelProperty(value = "")
  public UUID getTraceId() {
    return traceId;
  }

  public void setTraceId(UUID traceId) {
    this.traceId = traceId;
  }

  public DropDocumentReq requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

  /**
   * Get requestId
   * 
   * @return requestId
   **/
  @ApiModelProperty(value = "")
  public String getRequestId() {
    return requestId;
  }

  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }

  public DropDocumentReq integrationSetting(IntegrationSetting integrationSetting) {
    this.integrationSetting = integrationSetting;
    return this;
  }

  /**
   * Get integrationSetting
   * 
   * @return integrationSetting
   **/
  @ApiModelProperty(value = "")
  public IntegrationSetting getIntegrationSetting() {
    return integrationSetting;
  }

  public void setIntegrationSetting(IntegrationSetting integrationSetting) {
    this.integrationSetting = integrationSetting;
  }

  public DropDocumentReq jobId(UUID jobId) {
    this.jobId = jobId;
    return this;
  }

  /**
   * Get jobId
   * 
   * @return jobId
   **/
  @ApiModelProperty(value = "")
  public UUID getJobId() {
    return jobId;
  }

  public void setJobId(UUID jobId) {
    this.jobId = jobId;
  }

  public DropDocumentReq jobIdExt(String jobIdExt) {
    this.jobIdExt = jobIdExt;
    return this;
  }

  /**
   * Get jobIdExt
   * 
   * @return jobIdExt
   **/
  @ApiModelProperty(value = "")
  public String getJobIdExt() {
    return jobIdExt;
  }

  public void setJobIdExt(String jobIdExt) {
    this.jobIdExt = jobIdExt;
  }

  public DropDocumentReq documents(List<Pdf4meDocument> documents) {
    this.documents = documents;
    return this;
  }

  public DropDocumentReq addDocumentsItem(Pdf4meDocument documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<Pdf4meDocument>();
    }
    this.documents.add(documentsItem);
    return this;
  }

  /**
   * Get documents
   * 
   * @return documents
   **/
  @ApiModelProperty(value = "")
  public List<Pdf4meDocument> getDocuments() {
    return documents;
  }

  public void setDocuments(List<Pdf4meDocument> documents) {
    this.documents = documents;
  }

  public DropDocumentReq withoutMetadata(Boolean withoutMetadata) {
    this.withoutMetadata = withoutMetadata;
    return this;
  }

  /**
   * Get withoutMetadata
   * 
   * @return withoutMetadata
   **/
  @ApiModelProperty(value = "")
  public Boolean isWithoutMetadata() {
    return withoutMetadata;
  }

  public void setWithoutMetadata(Boolean withoutMetadata) {
    this.withoutMetadata = withoutMetadata;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DropDocumentReq dropDocumentReq = (DropDocumentReq) o;
    return Objects.equals(this.notification, dropDocumentReq.notification)
        && Objects.equals(this.documentId, dropDocumentReq.documentId)
        && Objects.equals(this.userId, dropDocumentReq.userId) && Objects.equals(this.url, dropDocumentReq.url)
        && Arrays.equals(this.document, dropDocumentReq.document)
        && Objects.equals(this.fileName, dropDocumentReq.fileName)
        && Objects.equals(this.cloudStorageProvider, dropDocumentReq.cloudStorageProvider)
        && Objects.equals(this.cloudStorageFiles, dropDocumentReq.cloudStorageFiles)
        && Objects.equals(this.cloudStorageFilesDesc, dropDocumentReq.cloudStorageFilesDesc)
        && Objects.equals(this.tenantId, dropDocumentReq.tenantId)
        && Objects.equals(this.subscriptionId, dropDocumentReq.subscriptionId)
        && Objects.equals(this.traceId, dropDocumentReq.traceId)
        && Objects.equals(this.requestId, dropDocumentReq.requestId)
        && Objects.equals(this.integrationSetting, dropDocumentReq.integrationSetting)
        && Objects.equals(this.jobId, dropDocumentReq.jobId) && Objects.equals(this.jobIdExt, dropDocumentReq.jobIdExt)
        && Objects.equals(this.documents, dropDocumentReq.documents)
        && Objects.equals(this.withoutMetadata, dropDocumentReq.withoutMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notification, documentId, userId, url, Arrays.hashCode(document), fileName,
        cloudStorageProvider, cloudStorageFiles, cloudStorageFilesDesc, tenantId, subscriptionId, traceId, requestId,
        integrationSetting, jobId, jobIdExt, documents, withoutMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DropDocumentReq {\n");

    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    cloudStorageProvider: ").append(toIndentedString(cloudStorageProvider)).append("\n");
    sb.append("    cloudStorageFiles: ").append(toIndentedString(cloudStorageFiles)).append("\n");
    sb.append("    cloudStorageFilesDesc: ").append(toIndentedString(cloudStorageFilesDesc)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    integrationSetting: ").append(toIndentedString(integrationSetting)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobIdExt: ").append(toIndentedString(jobIdExt)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    withoutMetadata: ").append(toIndentedString(withoutMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
