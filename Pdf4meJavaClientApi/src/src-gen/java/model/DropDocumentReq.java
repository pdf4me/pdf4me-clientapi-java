/*
 * DmsApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import model.Notification;
import model.UserFingerprint;

/**
 * DropDocumentReq
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-01T18:17:38.351+01:00")
public class DropDocumentReq {
  @SerializedName("notification")
  private Notification notification = null;

  @SerializedName("jobId")
  private UUID jobId = null;

  @SerializedName("documentId")
  private UUID documentId = null;

  @SerializedName("userId")
  private UUID userId = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("document")
  private byte[] document = null;

  @SerializedName("fileName")
  private String fileName = null;

  /**
   * Gets or Sets cloudStorageProvider
   */
  @JsonAdapter(CloudStorageProviderEnum.Adapter.class)
  public enum CloudStorageProviderEnum {
    UNDEF("undef"),
    
    LOCAL("local"),
    
    URL("url"),
    
    ONEDRIVE("oneDrive"),
    
    DROPBOX("dropbox"),
    
    GOOGLEDRIVE("googleDrive"),
    
    KLOUDLESS("kloudless");

    private String value;

    CloudStorageProviderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CloudStorageProviderEnum fromValue(String text) {
      for (CloudStorageProviderEnum b : CloudStorageProviderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CloudStorageProviderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CloudStorageProviderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CloudStorageProviderEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CloudStorageProviderEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cloudStorageProvider")
  private CloudStorageProviderEnum cloudStorageProvider = null;

  @SerializedName("cloudStorageFiles")
  private List<String> cloudStorageFiles = null;

  @SerializedName("cloudStorageFilesDesc")
  private String cloudStorageFilesDesc = null;

  @SerializedName("getNotified")
  private Boolean getNotified = null;

  @SerializedName("connectionId")
  private String connectionId = null;

  @SerializedName("userFingerprint")
  private UserFingerprint userFingerprint = null;

  public DropDocumentReq notification(Notification notification) {
    this.notification = notification;
    return this;
  }

   /**
   * Get notification
   * @return notification
  **/
  @ApiModelProperty(value = "")
  public Notification getNotification() {
    return notification;
  }

  public void setNotification(Notification notification) {
    this.notification = notification;
  }

  public DropDocumentReq jobId(UUID jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(value = "")
  public UUID getJobId() {
    return jobId;
  }

  public void setJobId(UUID jobId) {
    this.jobId = jobId;
  }

  public DropDocumentReq documentId(UUID documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * Get documentId
   * @return documentId
  **/
  @ApiModelProperty(value = "")
  public UUID getDocumentId() {
    return documentId;
  }

  public void setDocumentId(UUID documentId) {
    this.documentId = documentId;
  }

  public DropDocumentReq userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public DropDocumentReq url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public DropDocumentReq document(byte[] document) {
    this.document = document;
    return this;
  }

   /**
   * Get document
   * @return document
  **/
  @ApiModelProperty(value = "")
  public byte[] getDocument() {
    return document;
  }

  public void setDocument(byte[] document) {
    this.document = document;
  }

  public DropDocumentReq fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @ApiModelProperty(value = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public DropDocumentReq cloudStorageProvider(CloudStorageProviderEnum cloudStorageProvider) {
    this.cloudStorageProvider = cloudStorageProvider;
    return this;
  }

   /**
   * Get cloudStorageProvider
   * @return cloudStorageProvider
  **/
  @ApiModelProperty(value = "")
  public CloudStorageProviderEnum getCloudStorageProvider() {
    return cloudStorageProvider;
  }

  public void setCloudStorageProvider(CloudStorageProviderEnum cloudStorageProvider) {
    this.cloudStorageProvider = cloudStorageProvider;
  }

  public DropDocumentReq cloudStorageFiles(List<String> cloudStorageFiles) {
    this.cloudStorageFiles = cloudStorageFiles;
    return this;
  }

  public DropDocumentReq addCloudStorageFilesItem(String cloudStorageFilesItem) {
    if (this.cloudStorageFiles == null) {
      this.cloudStorageFiles = new ArrayList<String>();
    }
    this.cloudStorageFiles.add(cloudStorageFilesItem);
    return this;
  }

   /**
   * Get cloudStorageFiles
   * @return cloudStorageFiles
  **/
  @ApiModelProperty(value = "")
  public List<String> getCloudStorageFiles() {
    return cloudStorageFiles;
  }

  public void setCloudStorageFiles(List<String> cloudStorageFiles) {
    this.cloudStorageFiles = cloudStorageFiles;
  }

  public DropDocumentReq cloudStorageFilesDesc(String cloudStorageFilesDesc) {
    this.cloudStorageFilesDesc = cloudStorageFilesDesc;
    return this;
  }

   /**
   * Get cloudStorageFilesDesc
   * @return cloudStorageFilesDesc
  **/
  @ApiModelProperty(value = "")
  public String getCloudStorageFilesDesc() {
    return cloudStorageFilesDesc;
  }

  public void setCloudStorageFilesDesc(String cloudStorageFilesDesc) {
    this.cloudStorageFilesDesc = cloudStorageFilesDesc;
  }

  public DropDocumentReq getNotified(Boolean getNotified) {
    this.getNotified = getNotified;
    return this;
  }

   /**
   * Run the action asynchronously, get notified for any status changes.
   * @return getNotified
  **/
  @ApiModelProperty(value = "Run the action asynchronously, get notified for any status changes.")
  public Boolean isGetNotified() {
    return getNotified;
  }

  public void setGetNotified(Boolean getNotified) {
    this.getNotified = getNotified;
  }

  public DropDocumentReq connectionId(String connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Get connectionId
   * @return connectionId
  **/
  @ApiModelProperty(value = "")
  public String getConnectionId() {
    return connectionId;
  }

  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }

  public DropDocumentReq userFingerprint(UserFingerprint userFingerprint) {
    this.userFingerprint = userFingerprint;
    return this;
  }

   /**
   * Get userFingerprint
   * @return userFingerprint
  **/
  @ApiModelProperty(value = "")
  public UserFingerprint getUserFingerprint() {
    return userFingerprint;
  }

  public void setUserFingerprint(UserFingerprint userFingerprint) {
    this.userFingerprint = userFingerprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DropDocumentReq dropDocumentReq = (DropDocumentReq) o;
    return Objects.equals(this.notification, dropDocumentReq.notification) &&
        Objects.equals(this.jobId, dropDocumentReq.jobId) &&
        Objects.equals(this.documentId, dropDocumentReq.documentId) &&
        Objects.equals(this.userId, dropDocumentReq.userId) &&
        Objects.equals(this.url, dropDocumentReq.url) &&
        Objects.equals(this.document, dropDocumentReq.document) &&
        Objects.equals(this.fileName, dropDocumentReq.fileName) &&
        Objects.equals(this.cloudStorageProvider, dropDocumentReq.cloudStorageProvider) &&
        Objects.equals(this.cloudStorageFiles, dropDocumentReq.cloudStorageFiles) &&
        Objects.equals(this.cloudStorageFilesDesc, dropDocumentReq.cloudStorageFilesDesc) &&
        Objects.equals(this.getNotified, dropDocumentReq.getNotified) &&
        Objects.equals(this.connectionId, dropDocumentReq.connectionId) &&
        Objects.equals(this.userFingerprint, dropDocumentReq.userFingerprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notification, jobId, documentId, userId, url, document, fileName, cloudStorageProvider, cloudStorageFiles, cloudStorageFilesDesc, getNotified, connectionId, userFingerprint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DropDocumentReq {\n");
    
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    cloudStorageProvider: ").append(toIndentedString(cloudStorageProvider)).append("\n");
    sb.append("    cloudStorageFiles: ").append(toIndentedString(cloudStorageFiles)).append("\n");
    sb.append("    cloudStorageFilesDesc: ").append(toIndentedString(cloudStorageFilesDesc)).append("\n");
    sb.append("    getNotified: ").append(toIndentedString(getNotified)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    userFingerprint: ").append(toIndentedString(userFingerprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

