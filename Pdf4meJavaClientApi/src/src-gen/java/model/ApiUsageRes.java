/*
 * DmsApi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ApiUsageRes
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-01T18:17:38.351+01:00")
public class ApiUsageRes {
  @SerializedName("apiUsage")
  private Long apiUsage = null;

  @SerializedName("payedUsage")
  private Long payedUsage = null;

  @SerializedName("lastPayment")
  private OffsetDateTime lastPayment = null;

  @SerializedName("paymentProfile")
  private String paymentProfile = null;

  public ApiUsageRes apiUsage(Long apiUsage) {
    this.apiUsage = apiUsage;
    return this;
  }

   /**
   * Api usage since last payment.
   * @return apiUsage
  **/
  @ApiModelProperty(value = "Api usage since last payment.")
  public Long getApiUsage() {
    return apiUsage;
  }

  public void setApiUsage(Long apiUsage) {
    this.apiUsage = apiUsage;
  }

  public ApiUsageRes payedUsage(Long payedUsage) {
    this.payedUsage = payedUsage;
    return this;
  }

   /**
   * Total Usage payed.
   * @return payedUsage
  **/
  @ApiModelProperty(value = "Total Usage payed.")
  public Long getPayedUsage() {
    return payedUsage;
  }

  public void setPayedUsage(Long payedUsage) {
    this.payedUsage = payedUsage;
  }

  public ApiUsageRes lastPayment(OffsetDateTime lastPayment) {
    this.lastPayment = lastPayment;
    return this;
  }

   /**
   * Date of last payment
   * @return lastPayment
  **/
  @ApiModelProperty(value = "Date of last payment")
  public OffsetDateTime getLastPayment() {
    return lastPayment;
  }

  public void setLastPayment(OffsetDateTime lastPayment) {
    this.lastPayment = lastPayment;
  }

  public ApiUsageRes paymentProfile(String paymentProfile) {
    this.paymentProfile = paymentProfile;
    return this;
  }

   /**
   * Profile of selected payment
   * @return paymentProfile
  **/
  @ApiModelProperty(value = "Profile of selected payment")
  public String getPaymentProfile() {
    return paymentProfile;
  }

  public void setPaymentProfile(String paymentProfile) {
    this.paymentProfile = paymentProfile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiUsageRes apiUsageRes = (ApiUsageRes) o;
    return Objects.equals(this.apiUsage, apiUsageRes.apiUsage) &&
        Objects.equals(this.payedUsage, apiUsageRes.payedUsage) &&
        Objects.equals(this.lastPayment, apiUsageRes.lastPayment) &&
        Objects.equals(this.paymentProfile, apiUsageRes.paymentProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiUsage, payedUsage, lastPayment, paymentProfile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiUsageRes {\n");
    
    sb.append("    apiUsage: ").append(toIndentedString(apiUsage)).append("\n");
    sb.append("    payedUsage: ").append(toIndentedString(payedUsage)).append("\n");
    sb.append("    lastPayment: ").append(toIndentedString(lastPayment)).append("\n");
    sb.append("    paymentProfile: ").append(toIndentedString(paymentProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

